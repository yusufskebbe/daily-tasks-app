{
  "version": 3,
  "sources": ["../../../../../../node_modules/@omnedia/ngx-starry-sky/fesm2022/omnedia-ngx-starry-sky.mjs"],
  "sourcesContent": ["import * as i1 from '@angular/common';\nimport { isPlatformBrowser, CommonModule } from '@angular/common';\nimport * as i0 from '@angular/core';\nimport { PLATFORM_ID, Component, Inject, ViewChild, Input } from '@angular/core';\nconst _c0 = [\"OmStarrySkyCanvas\"];\nconst _c1 = [\"OmStarrySkySvg\"];\nconst _c2 = [\"OmStarrySkyWrapper\"];\nconst _c3 = [\"*\"];\nfunction NgxStarrySkyComponent_Conditional_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵnamespaceSVG();\n    i0.ɵɵelement(0, \"rect\");\n    i0.ɵɵelementStart(1, \"defs\")(2, \"linearGradient\", 5);\n    i0.ɵɵelement(3, \"stop\", 6)(4, \"stop\", 7);\n    i0.ɵɵelementEnd()();\n  }\n  if (rf & 2) {\n    let tmp_7_0;\n    let tmp_8_0;\n    let tmp_10_0;\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵattribute(\"key\", ctx_r0.shootingStar.id)(\"x\", ctx_r0.shootingStar.x)(\"y\", ctx_r0.shootingStar.y)(\"width\", ((tmp_7_0 = ctx_r0.shootingStarsProps.starWidth) !== null && tmp_7_0 !== undefined ? tmp_7_0 : 1) * ctx_r0.shootingStar.scale)(\"height\", (tmp_8_0 = ctx_r0.shootingStarsProps.starHeight) !== null && tmp_8_0 !== undefined ? tmp_8_0 : 10)(\"fill\", \"url(#gradient)\")(\"transform\", \"rotate(\" + ctx_r0.shootingStar.angle + \", \" + (ctx_r0.shootingStar.x + ((tmp_10_0 = ctx_r0.shootingStarsProps.starWidth) !== null && tmp_10_0 !== undefined ? tmp_10_0 : 1) * ctx_r0.shootingStar.scale / 2) + \", \" + (ctx_r0.shootingStar.y + ((tmp_10_0 = ctx_r0.shootingStarsProps.starHeight) !== null && tmp_10_0 !== undefined ? tmp_10_0 : 10) / 2) + \")\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵstyleProp(\"stop-color\", ctx_r0.shootingStarsProps.trailColor)(\"stop-opacity\", \"0\");\n    i0.ɵɵadvance();\n    i0.ɵɵstyleProp(\"stop-color\", ctx_r0.shootingStarsProps.starColor)(\"stop-opacity\", \"1\");\n  }\n}\nclass NgxStarrySkyComponent {\n  platformId;\n  canvasRef;\n  svgRef;\n  wrapperRef;\n  styleClass;\n  disableShootingStars = false;\n  set skyColor(color) {\n    this.style[\"--om-starry-sky-color\"] = color;\n  }\n  set starsBackgroundPropsValue(props) {\n    this.starsBackgroundProps = {\n      ...this.starsBackgroundProps,\n      ...props\n    };\n  }\n  starsBackgroundProps = {\n    starDensity: 0.00015,\n    allStarsTwinkle: true,\n    twinkleProbability: 0.7,\n    minTwinkleSpeed: 0.5,\n    maxTwinkleSpeed: 1\n  };\n  set shootingStarsPropsValue(props) {\n    this.shootingStarsProps = {\n      ...this.shootingStarsProps,\n      ...props\n    };\n  }\n  shootingStarsProps = {\n    minSpeed: 10,\n    maxSpeed: 30,\n    minDelay: 1200,\n    maxDelay: 4200,\n    starColor: \"#9E00FF\",\n    trailColor: \"#2EB9DF\",\n    starWidth: 10,\n    starHeight: 1\n  };\n  shootingStar;\n  style = {};\n  stars = [];\n  isInView = false;\n  isAnimating = false;\n  animationFrameIdSky;\n  animationFrameIdShootingStar;\n  intersectionObserver;\n  constructor(platformId) {\n    this.platformId = platformId;\n  }\n  ngAfterViewInit() {\n    this.initStarSky();\n    this.initShootingStars();\n    if (isPlatformBrowser(this.platformId)) {\n      this.intersectionObserver = new IntersectionObserver(([entry]) => {\n        this.renderContents(entry.isIntersecting);\n      });\n      this.intersectionObserver.observe(this.canvasRef.nativeElement);\n    }\n  }\n  ngOnDestroy() {\n    window.removeEventListener(\"resize\", () => this.setCanvasSize());\n    if (this.intersectionObserver) {\n      this.intersectionObserver.disconnect();\n    }\n    if (this.animationFrameIdSky) {\n      cancelAnimationFrame(this.animationFrameIdSky);\n    }\n    if (this.animationFrameIdShootingStar) {\n      cancelAnimationFrame(this.animationFrameIdShootingStar);\n    }\n  }\n  renderContents(isIntersecting) {\n    if (isIntersecting && !this.isInView) {\n      this.isInView = true;\n      if (!this.isAnimating) {\n        this.animationFrameIdSky = requestAnimationFrame(() => this.renderStarSky());\n        this.animationFrameIdShootingStar = requestAnimationFrame(() => this.moveShootingStar());\n      }\n    } else if (!isIntersecting) {\n      this.isInView = false;\n    }\n  }\n  initStarSky() {\n    window.addEventListener(\"resize\", () => this.setCanvasSize());\n    this.setCanvasSize();\n    this.updateStars();\n    this.renderStarSky();\n  }\n  initShootingStars() {\n    if (this.disableShootingStars) {\n      return;\n    }\n    this.createShootingStar();\n    this.moveShootingStar();\n  }\n  renderStarSky() {\n    if (!this.isInView) {\n      this.isAnimating = false;\n      return;\n    }\n    this.isAnimating = true;\n    const context = this.canvasRef.nativeElement.getContext(\"2d\");\n    if (!context) {\n      return;\n    }\n    context.clearRect(0, 0, this.canvasRef.nativeElement.width, this.canvasRef.nativeElement.height);\n    this.stars.forEach(star => {\n      context.beginPath();\n      context.arc(star.x, star.y, star.radius, 0, Math.PI * 2);\n      context.fillStyle = `rgba(255, 255, 255, ${star.opacity})`;\n      context.fill();\n      if (star.twinkleSpeed !== null) {\n        star.opacity = 0.5 + Math.abs(Math.sin(Date.now() * 0.001 / star.twinkleSpeed) * 0.5);\n      }\n    });\n    this.animationFrameIdSky = requestAnimationFrame(() => this.renderStarSky());\n  }\n  updateStars() {\n    const context = this.canvasRef.nativeElement.getContext(\"2d\");\n    if (!context) {\n      return;\n    }\n    const {\n      width,\n      height\n    } = this.wrapperRef.nativeElement.getBoundingClientRect();\n    this.stars = this.generateStars(width, height);\n  }\n  generateStars(width, height) {\n    const area = width * height;\n    const numStars = Math.floor(area * (this.starsBackgroundProps.starDensity ?? 0.00015));\n    return Array.from({\n      length: numStars\n    }, () => {\n      const shouldTwinkle = this.starsBackgroundProps.allStarsTwinkle || Math.random() < (this.starsBackgroundProps.twinkleProbability ?? 0.7);\n      return {\n        x: Math.random() * width,\n        y: Math.random() * height,\n        radius: Math.random() * 0.05 + 0.5,\n        opacity: Math.random() * 0.5 + 0.5,\n        twinkleSpeed: shouldTwinkle ? (this.starsBackgroundProps.minTwinkleSpeed ?? 0.5) + Math.random() * ((this.starsBackgroundProps.maxTwinkleSpeed ?? 1) - (this.starsBackgroundProps.minTwinkleSpeed ?? 0.5)) : null\n      };\n    });\n  }\n  setCanvasSize() {\n    this.canvasRef.nativeElement.width = this.wrapperRef.nativeElement.getBoundingClientRect().width;\n    this.canvasRef.nativeElement.height = this.wrapperRef.nativeElement.getBoundingClientRect().height;\n  }\n  createShootingStar() {\n    const {\n      x,\n      y,\n      angle\n    } = this.getRandomStartPoint();\n    const newStar = {\n      id: Date.now(),\n      x,\n      y,\n      angle,\n      scale: 1,\n      speed: Math.random() * ((this.shootingStarsProps.maxSpeed ?? 30) - (this.shootingStarsProps.minSpeed ?? 10)) + (this.shootingStarsProps.minSpeed ?? 10),\n      distance: 0\n    };\n    this.shootingStar = newStar;\n    const randomDelay = Math.random() * ((this.shootingStarsProps.maxDelay ?? 4200) - (this.shootingStarsProps.minDelay ?? 1200)) + (this.shootingStarsProps.minDelay ?? 1200);\n    setTimeout(() => this.createShootingStar(), randomDelay);\n  }\n  moveShootingStar() {\n    if (this.disableShootingStars) {\n      return;\n    }\n    if (!this.isInView) {\n      this.isAnimating = false;\n      return;\n    }\n    this.isAnimating = true;\n    this.animationFrameIdShootingStar = requestAnimationFrame(() => this.moveShootingStar());\n    if (!this.shootingStar) {\n      return;\n    }\n    const prevStar = Object.assign({}, this.shootingStar);\n    const newX = prevStar.x + prevStar.speed * Math.cos(prevStar.angle * Math.PI / 180);\n    const newY = prevStar.y + prevStar.speed * Math.sin(prevStar.angle * Math.PI / 180);\n    const newDistance = prevStar.distance + prevStar.speed;\n    const newScale = 1 + newDistance / 100;\n    if (newX < -20 || newX > window.innerWidth + 20 || newY < -20 || newY > window.innerHeight + 20) {\n      this.shootingStar = undefined;\n      return;\n    }\n    prevStar.x = newX;\n    prevStar.y = newY;\n    prevStar.distance = newDistance;\n    prevStar.scale = newScale;\n    this.shootingStar = prevStar;\n  }\n  getRandomStartPoint() {\n    const side = Math.floor(Math.random() * 4);\n    const offset = Math.random() * window.innerWidth;\n    switch (side) {\n      case 0:\n        return {\n          x: offset,\n          y: 0,\n          angle: 45\n        };\n      case 1:\n        return {\n          x: window.innerWidth,\n          y: offset,\n          angle: 135\n        };\n      case 2:\n        return {\n          x: offset,\n          y: window.innerHeight,\n          angle: 225\n        };\n      case 3:\n        return {\n          x: 0,\n          y: offset,\n          angle: 315\n        };\n      default:\n        return {\n          x: 0,\n          y: 0,\n          angle: 45\n        };\n    }\n  }\n  static ɵfac = function NgxStarrySkyComponent_Factory(__ngFactoryType__) {\n    return new (__ngFactoryType__ || NgxStarrySkyComponent)(i0.ɵɵdirectiveInject(PLATFORM_ID));\n  };\n  static ɵcmp = /* @__PURE__ */i0.ɵɵdefineComponent({\n    type: NgxStarrySkyComponent,\n    selectors: [[\"om-starry-sky\"]],\n    viewQuery: function NgxStarrySkyComponent_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 5);\n        i0.ɵɵviewQuery(_c1, 5);\n        i0.ɵɵviewQuery(_c2, 5);\n      }\n      if (rf & 2) {\n        let _t;\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.canvasRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.svgRef = _t.first);\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.wrapperRef = _t.first);\n      }\n    },\n    inputs: {\n      styleClass: \"styleClass\",\n      disableShootingStars: \"disableShootingStars\",\n      skyColor: \"skyColor\",\n      starsBackgroundPropsValue: [0, \"starsBackgroundConfig\", \"starsBackgroundPropsValue\"],\n      shootingStarsPropsValue: [0, \"shootingStarsConfig\", \"shootingStarsPropsValue\"]\n    },\n    standalone: true,\n    features: [i0.ɵɵStandaloneFeature],\n    ngContentSelectors: _c3,\n    decls: 9,\n    vars: 3,\n    consts: [[\"OmStarrySkyWrapper\", \"\"], [\"OmStarrySkySvg\", \"\"], [\"OmStarrySkyCanvas\", \"\"], [1, \"om-starry-sky\", 3, \"ngStyle\", \"ngClass\"], [1, \"om-starry-sky-background\"], [\"id\", \"gradient\", \"x1\", \"0%\", \"y1\", \"0%\", \"x2\", \"100%\", \"y2\", \"100%\"], [\"offset\", \"0%\"], [\"offset\", \"100%\"]],\n    template: function NgxStarrySkyComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵprojectionDef();\n        i0.ɵɵelementStart(0, \"div\", 3, 0)(2, \"div\", 4);\n        i0.ɵɵnamespaceSVG();\n        i0.ɵɵelementStart(3, \"svg\", null, 1);\n        i0.ɵɵtemplate(5, NgxStarrySkyComponent_Conditional_5_Template, 5, 15);\n        i0.ɵɵelementEnd();\n        i0.ɵɵnamespaceHTML();\n        i0.ɵɵelement(6, \"canvas\", null, 2);\n        i0.ɵɵelementEnd();\n        i0.ɵɵprojection(8);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngStyle\", ctx.style)(\"ngClass\", ctx.styleClass);\n        i0.ɵɵadvance(5);\n        i0.ɵɵconditional(ctx.shootingStar ? 5 : -1);\n      }\n    },\n    dependencies: [CommonModule, i1.NgClass, i1.NgStyle],\n    styles: [\".om-starry-sky[_ngcontent-%COMP%]{--om-starry-sky-color: rgb(23 23 23/1);position:relative;width:100%;height:100%}.om-starry-sky[_ngcontent-%COMP%]   .om-starry-sky-background[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;background-color:var(--om-starry-sky-color)}.om-starry-sky[_ngcontent-%COMP%]   .om-starry-sky-background[_ngcontent-%COMP%]   canvas[_ngcontent-%COMP%], .om-starry-sky[_ngcontent-%COMP%]   .om-starry-sky-background[_ngcontent-%COMP%]   svg[_ngcontent-%COMP%]{position:absolute;width:100%;height:100%;inset:0}\"]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(NgxStarrySkyComponent, [{\n    type: Component,\n    args: [{\n      selector: \"om-starry-sky\",\n      standalone: true,\n      imports: [CommonModule],\n      template: \"<div class=\\\"om-starry-sky\\\" [ngStyle]=\\\"style\\\" [ngClass]=\\\"styleClass\\\" #OmStarrySkyWrapper>\\r\\n  <div class=\\\"om-starry-sky-background\\\">\\r\\n    <svg #OmStarrySkySvg>\\r\\n      @if (shootingStar) {\\r\\n      <rect [attr.key]=\\\"shootingStar.id\\\" [attr.x]=\\\"shootingStar.x\\\" [attr.y]=\\\"shootingStar.y\\\"\\r\\n        [attr.width]=\\\"(shootingStarsProps.starWidth ?? 1) * (shootingStar.scale)\\\"\\r\\n        [attr.height]=\\\"shootingStarsProps.starHeight ?? 10\\\" [attr.fill]=\\\"'url(#gradient)'\\\"\\r\\n        [attr.transform]=\\\"'rotate(' + shootingStar.angle + ', ' + (shootingStar.x + (shootingStarsProps.starWidth ?? 1) * shootingStar.scale / 2) + ', ' + (shootingStar.y + (shootingStarsProps.starHeight ?? 10) / 2) + ')'\\\">\\r\\n      </rect>\\r\\n      <defs>\\r\\n        <linearGradient id=\\\"gradient\\\" x1=\\\"0%\\\" y1=\\\"0%\\\" x2=\\\"100%\\\" y2=\\\"100%\\\">\\r\\n          <stop offset=\\\"0%\\\" [style.stopColor]=\\\"shootingStarsProps.trailColor\\\" [style.stopOpacity]=\\\"'0'\\\" />\\r\\n          <stop offset=\\\"100%\\\" [style.stopColor]=\\\"shootingStarsProps.starColor\\\" [style.stopOpacity]=\\\"'1'\\\" />\\r\\n        </linearGradient>\\r\\n      </defs>\\r\\n      }\\r\\n    </svg>\\r\\n    <canvas #OmStarrySkyCanvas></canvas>\\r\\n  </div>\\r\\n\\r\\n  <ng-content></ng-content>\\r\\n</div>\",\n      styles: [\".om-starry-sky{--om-starry-sky-color: rgb(23 23 23/1);position:relative;width:100%;height:100%}.om-starry-sky .om-starry-sky-background{position:absolute;width:100%;height:100%;background-color:var(--om-starry-sky-color)}.om-starry-sky .om-starry-sky-background canvas,.om-starry-sky .om-starry-sky-background svg{position:absolute;width:100%;height:100%;inset:0}\\n\"]\n    }]\n  }], () => [{\n    type: undefined,\n    decorators: [{\n      type: Inject,\n      args: [PLATFORM_ID]\n    }]\n  }], {\n    canvasRef: [{\n      type: ViewChild,\n      args: [\"OmStarrySkyCanvas\"]\n    }],\n    svgRef: [{\n      type: ViewChild,\n      args: [\"OmStarrySkySvg\"]\n    }],\n    wrapperRef: [{\n      type: ViewChild,\n      args: [\"OmStarrySkyWrapper\"]\n    }],\n    styleClass: [{\n      type: Input,\n      args: [\"styleClass\"]\n    }],\n    disableShootingStars: [{\n      type: Input,\n      args: [\"disableShootingStars\"]\n    }],\n    skyColor: [{\n      type: Input,\n      args: [\"skyColor\"]\n    }],\n    starsBackgroundPropsValue: [{\n      type: Input,\n      args: [\"starsBackgroundConfig\"]\n    }],\n    shootingStarsPropsValue: [{\n      type: Input,\n      args: [\"shootingStarsConfig\"]\n    }]\n  });\n})();\n\n/*\n * Public API Surface of ngx-starry-sky\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { NgxStarrySkyComponent };\n"],
  "mappings": ";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAIA,IAAM,MAAM,CAAC,mBAAmB;AAChC,IAAM,MAAM,CAAC,gBAAgB;AAC7B,IAAM,MAAM,CAAC,oBAAoB;AACjC,IAAM,MAAM,CAAC,GAAG;AAChB,SAAS,6CAA6C,IAAI,KAAK;AAC7D,MAAI,KAAK,GAAG;AACV,IAAG,eAAe;AAClB,IAAG,UAAU,GAAG,MAAM;AACtB,IAAG,eAAe,GAAG,MAAM,EAAE,GAAG,kBAAkB,CAAC;AACnD,IAAG,UAAU,GAAG,QAAQ,CAAC,EAAE,GAAG,QAAQ,CAAC;AACvC,IAAG,aAAa,EAAE;AAAA,EACpB;AACA,MAAI,KAAK,GAAG;AACV,QAAI;AACJ,QAAI;AACJ,QAAI;AACJ,UAAM,SAAY,cAAc;AAChC,IAAG,YAAY,OAAO,OAAO,aAAa,EAAE,EAAE,KAAK,OAAO,aAAa,CAAC,EAAE,KAAK,OAAO,aAAa,CAAC,EAAE,WAAW,UAAU,OAAO,mBAAmB,eAAe,QAAQ,YAAY,SAAY,UAAU,KAAK,OAAO,aAAa,KAAK,EAAE,WAAW,UAAU,OAAO,mBAAmB,gBAAgB,QAAQ,YAAY,SAAY,UAAU,EAAE,EAAE,QAAQ,gBAAgB,EAAE,aAAa,YAAY,OAAO,aAAa,QAAQ,QAAQ,OAAO,aAAa,MAAM,WAAW,OAAO,mBAAmB,eAAe,QAAQ,aAAa,SAAY,WAAW,KAAK,OAAO,aAAa,QAAQ,KAAK,QAAQ,OAAO,aAAa,MAAM,WAAW,OAAO,mBAAmB,gBAAgB,QAAQ,aAAa,SAAY,WAAW,MAAM,KAAK,GAAG;AACnuB,IAAG,UAAU,CAAC;AACd,IAAG,YAAY,cAAc,OAAO,mBAAmB,UAAU,EAAE,gBAAgB,GAAG;AACtF,IAAG,UAAU;AACb,IAAG,YAAY,cAAc,OAAO,mBAAmB,SAAS,EAAE,gBAAgB,GAAG;AAAA,EACvF;AACF;AACA,IAAM,wBAAN,MAAM,uBAAsB;AAAA,EAC1B;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA;AAAA,EACA,uBAAuB;AAAA,EACvB,IAAI,SAAS,OAAO;AAClB,SAAK,MAAM,uBAAuB,IAAI;AAAA,EACxC;AAAA,EACA,IAAI,0BAA0B,OAAO;AACnC,SAAK,uBAAuB,kCACvB,KAAK,uBACL;AAAA,EAEP;AAAA,EACA,uBAAuB;AAAA,IACrB,aAAa;AAAA,IACb,iBAAiB;AAAA,IACjB,oBAAoB;AAAA,IACpB,iBAAiB;AAAA,IACjB,iBAAiB;AAAA,EACnB;AAAA,EACA,IAAI,wBAAwB,OAAO;AACjC,SAAK,qBAAqB,kCACrB,KAAK,qBACL;AAAA,EAEP;AAAA,EACA,qBAAqB;AAAA,IACnB,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,UAAU;AAAA,IACV,WAAW;AAAA,IACX,YAAY;AAAA,IACZ,WAAW;AAAA,IACX,YAAY;AAAA,EACd;AAAA,EACA;AAAA,EACA,QAAQ,CAAC;AAAA,EACT,QAAQ,CAAC;AAAA,EACT,WAAW;AAAA,EACX,cAAc;AAAA,EACd;AAAA,EACA;AAAA,EACA;AAAA,EACA,YAAY,YAAY;AACtB,SAAK,aAAa;AAAA,EACpB;AAAA,EACA,kBAAkB;AAChB,SAAK,YAAY;AACjB,SAAK,kBAAkB;AACvB,QAAI,kBAAkB,KAAK,UAAU,GAAG;AACtC,WAAK,uBAAuB,IAAI,qBAAqB,CAAC,CAAC,KAAK,MAAM;AAChE,aAAK,eAAe,MAAM,cAAc;AAAA,MAC1C,CAAC;AACD,WAAK,qBAAqB,QAAQ,KAAK,UAAU,aAAa;AAAA,IAChE;AAAA,EACF;AAAA,EACA,cAAc;AACZ,WAAO,oBAAoB,UAAU,MAAM,KAAK,cAAc,CAAC;AAC/D,QAAI,KAAK,sBAAsB;AAC7B,WAAK,qBAAqB,WAAW;AAAA,IACvC;AACA,QAAI,KAAK,qBAAqB;AAC5B,2BAAqB,KAAK,mBAAmB;AAAA,IAC/C;AACA,QAAI,KAAK,8BAA8B;AACrC,2BAAqB,KAAK,4BAA4B;AAAA,IACxD;AAAA,EACF;AAAA,EACA,eAAe,gBAAgB;AAC7B,QAAI,kBAAkB,CAAC,KAAK,UAAU;AACpC,WAAK,WAAW;AAChB,UAAI,CAAC,KAAK,aAAa;AACrB,aAAK,sBAAsB,sBAAsB,MAAM,KAAK,cAAc,CAAC;AAC3E,aAAK,+BAA+B,sBAAsB,MAAM,KAAK,iBAAiB,CAAC;AAAA,MACzF;AAAA,IACF,WAAW,CAAC,gBAAgB;AAC1B,WAAK,WAAW;AAAA,IAClB;AAAA,EACF;AAAA,EACA,cAAc;AACZ,WAAO,iBAAiB,UAAU,MAAM,KAAK,cAAc,CAAC;AAC5D,SAAK,cAAc;AACnB,SAAK,YAAY;AACjB,SAAK,cAAc;AAAA,EACrB;AAAA,EACA,oBAAoB;AAClB,QAAI,KAAK,sBAAsB;AAC7B;AAAA,IACF;AACA,SAAK,mBAAmB;AACxB,SAAK,iBAAiB;AAAA,EACxB;AAAA,EACA,gBAAgB;AACd,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,cAAc;AACnB;AAAA,IACF;AACA,SAAK,cAAc;AACnB,UAAM,UAAU,KAAK,UAAU,cAAc,WAAW,IAAI;AAC5D,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,YAAQ,UAAU,GAAG,GAAG,KAAK,UAAU,cAAc,OAAO,KAAK,UAAU,cAAc,MAAM;AAC/F,SAAK,MAAM,QAAQ,UAAQ;AACzB,cAAQ,UAAU;AAClB,cAAQ,IAAI,KAAK,GAAG,KAAK,GAAG,KAAK,QAAQ,GAAG,KAAK,KAAK,CAAC;AACvD,cAAQ,YAAY,uBAAuB,KAAK,OAAO;AACvD,cAAQ,KAAK;AACb,UAAI,KAAK,iBAAiB,MAAM;AAC9B,aAAK,UAAU,MAAM,KAAK,IAAI,KAAK,IAAI,KAAK,IAAI,IAAI,OAAQ,KAAK,YAAY,IAAI,GAAG;AAAA,MACtF;AAAA,IACF,CAAC;AACD,SAAK,sBAAsB,sBAAsB,MAAM,KAAK,cAAc,CAAC;AAAA,EAC7E;AAAA,EACA,cAAc;AACZ,UAAM,UAAU,KAAK,UAAU,cAAc,WAAW,IAAI;AAC5D,QAAI,CAAC,SAAS;AACZ;AAAA,IACF;AACA,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,IACF,IAAI,KAAK,WAAW,cAAc,sBAAsB;AACxD,SAAK,QAAQ,KAAK,cAAc,OAAO,MAAM;AAAA,EAC/C;AAAA,EACA,cAAc,OAAO,QAAQ;AAC3B,UAAM,OAAO,QAAQ;AACrB,UAAM,WAAW,KAAK,MAAM,QAAQ,KAAK,qBAAqB,eAAe,MAAQ;AACrF,WAAO,MAAM,KAAK;AAAA,MAChB,QAAQ;AAAA,IACV,GAAG,MAAM;AACP,YAAM,gBAAgB,KAAK,qBAAqB,mBAAmB,KAAK,OAAO,KAAK,KAAK,qBAAqB,sBAAsB;AACpI,aAAO;AAAA,QACL,GAAG,KAAK,OAAO,IAAI;AAAA,QACnB,GAAG,KAAK,OAAO,IAAI;AAAA,QACnB,QAAQ,KAAK,OAAO,IAAI,OAAO;AAAA,QAC/B,SAAS,KAAK,OAAO,IAAI,MAAM;AAAA,QAC/B,cAAc,iBAAiB,KAAK,qBAAqB,mBAAmB,OAAO,KAAK,OAAO,MAAM,KAAK,qBAAqB,mBAAmB,MAAM,KAAK,qBAAqB,mBAAmB,QAAQ;AAAA,MAC/M;AAAA,IACF,CAAC;AAAA,EACH;AAAA,EACA,gBAAgB;AACd,SAAK,UAAU,cAAc,QAAQ,KAAK,WAAW,cAAc,sBAAsB,EAAE;AAC3F,SAAK,UAAU,cAAc,SAAS,KAAK,WAAW,cAAc,sBAAsB,EAAE;AAAA,EAC9F;AAAA,EACA,qBAAqB;AACnB,UAAM;AAAA,MACJ;AAAA,MACA;AAAA,MACA;AAAA,IACF,IAAI,KAAK,oBAAoB;AAC7B,UAAM,UAAU;AAAA,MACd,IAAI,KAAK,IAAI;AAAA,MACb;AAAA,MACA;AAAA,MACA;AAAA,MACA,OAAO;AAAA,MACP,OAAO,KAAK,OAAO,MAAM,KAAK,mBAAmB,YAAY,OAAO,KAAK,mBAAmB,YAAY,QAAQ,KAAK,mBAAmB,YAAY;AAAA,MACpJ,UAAU;AAAA,IACZ;AACA,SAAK,eAAe;AACpB,UAAM,cAAc,KAAK,OAAO,MAAM,KAAK,mBAAmB,YAAY,SAAS,KAAK,mBAAmB,YAAY,UAAU,KAAK,mBAAmB,YAAY;AACrK,eAAW,MAAM,KAAK,mBAAmB,GAAG,WAAW;AAAA,EACzD;AAAA,EACA,mBAAmB;AACjB,QAAI,KAAK,sBAAsB;AAC7B;AAAA,IACF;AACA,QAAI,CAAC,KAAK,UAAU;AAClB,WAAK,cAAc;AACnB;AAAA,IACF;AACA,SAAK,cAAc;AACnB,SAAK,+BAA+B,sBAAsB,MAAM,KAAK,iBAAiB,CAAC;AACvF,QAAI,CAAC,KAAK,cAAc;AACtB;AAAA,IACF;AACA,UAAM,WAAW,OAAO,OAAO,CAAC,GAAG,KAAK,YAAY;AACpD,UAAM,OAAO,SAAS,IAAI,SAAS,QAAQ,KAAK,IAAI,SAAS,QAAQ,KAAK,KAAK,GAAG;AAClF,UAAM,OAAO,SAAS,IAAI,SAAS,QAAQ,KAAK,IAAI,SAAS,QAAQ,KAAK,KAAK,GAAG;AAClF,UAAM,cAAc,SAAS,WAAW,SAAS;AACjD,UAAM,WAAW,IAAI,cAAc;AACnC,QAAI,OAAO,OAAO,OAAO,OAAO,aAAa,MAAM,OAAO,OAAO,OAAO,OAAO,cAAc,IAAI;AAC/F,WAAK,eAAe;AACpB;AAAA,IACF;AACA,aAAS,IAAI;AACb,aAAS,IAAI;AACb,aAAS,WAAW;AACpB,aAAS,QAAQ;AACjB,SAAK,eAAe;AAAA,EACtB;AAAA,EACA,sBAAsB;AACpB,UAAM,OAAO,KAAK,MAAM,KAAK,OAAO,IAAI,CAAC;AACzC,UAAM,SAAS,KAAK,OAAO,IAAI,OAAO;AACtC,YAAQ,MAAM;AAAA,MACZ,KAAK;AACH,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,QACT;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,GAAG,OAAO;AAAA,UACV,GAAG;AAAA,UACH,OAAO;AAAA,QACT;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG,OAAO;AAAA,UACV,OAAO;AAAA,QACT;AAAA,MACF,KAAK;AACH,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,QACT;AAAA,MACF;AACE,eAAO;AAAA,UACL,GAAG;AAAA,UACH,GAAG;AAAA,UACH,OAAO;AAAA,QACT;AAAA,IACJ;AAAA,EACF;AAAA,EACA,OAAO,OAAO,SAAS,8BAA8B,mBAAmB;AACtE,WAAO,KAAK,qBAAqB,wBAA0B,kBAAkB,WAAW,CAAC;AAAA,EAC3F;AAAA,EACA,OAAO,OAAyB,kBAAkB;AAAA,IAChD,MAAM;AAAA,IACN,WAAW,CAAC,CAAC,eAAe,CAAC;AAAA,IAC7B,WAAW,SAAS,4BAA4B,IAAI,KAAK;AACvD,UAAI,KAAK,GAAG;AACV,QAAG,YAAY,KAAK,CAAC;AACrB,QAAG,YAAY,KAAK,CAAC;AACrB,QAAG,YAAY,KAAK,CAAC;AAAA,MACvB;AACA,UAAI,KAAK,GAAG;AACV,YAAI;AACJ,QAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,YAAY,GAAG;AAChE,QAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,SAAS,GAAG;AAC7D,QAAG,eAAe,KAAQ,YAAY,CAAC,MAAM,IAAI,aAAa,GAAG;AAAA,MACnE;AAAA,IACF;AAAA,IACA,QAAQ;AAAA,MACN,YAAY;AAAA,MACZ,sBAAsB;AAAA,MACtB,UAAU;AAAA,MACV,2BAA2B,CAAC,GAAG,yBAAyB,2BAA2B;AAAA,MACnF,yBAAyB,CAAC,GAAG,uBAAuB,yBAAyB;AAAA,IAC/E;AAAA,IACA,YAAY;AAAA,IACZ,UAAU,CAAI,mBAAmB;AAAA,IACjC,oBAAoB;AAAA,IACpB,OAAO;AAAA,IACP,MAAM;AAAA,IACN,QAAQ,CAAC,CAAC,sBAAsB,EAAE,GAAG,CAAC,kBAAkB,EAAE,GAAG,CAAC,qBAAqB,EAAE,GAAG,CAAC,GAAG,iBAAiB,GAAG,WAAW,SAAS,GAAG,CAAC,GAAG,0BAA0B,GAAG,CAAC,MAAM,YAAY,MAAM,MAAM,MAAM,MAAM,MAAM,QAAQ,MAAM,MAAM,GAAG,CAAC,UAAU,IAAI,GAAG,CAAC,UAAU,MAAM,CAAC;AAAA,IACpR,UAAU,SAAS,+BAA+B,IAAI,KAAK;AACzD,UAAI,KAAK,GAAG;AACV,QAAG,gBAAgB;AACnB,QAAG,eAAe,GAAG,OAAO,GAAG,CAAC,EAAE,GAAG,OAAO,CAAC;AAC7C,QAAG,eAAe;AAClB,QAAG,eAAe,GAAG,OAAO,MAAM,CAAC;AACnC,QAAG,WAAW,GAAG,8CAA8C,GAAG,EAAE;AACpE,QAAG,aAAa;AAChB,QAAG,gBAAgB;AACnB,QAAG,UAAU,GAAG,UAAU,MAAM,CAAC;AACjC,QAAG,aAAa;AAChB,QAAG,aAAa,CAAC;AACjB,QAAG,aAAa;AAAA,MAClB;AACA,UAAI,KAAK,GAAG;AACV,QAAG,WAAW,WAAW,IAAI,KAAK,EAAE,WAAW,IAAI,UAAU;AAC7D,QAAG,UAAU,CAAC;AACd,QAAG,cAAc,IAAI,eAAe,IAAI,EAAE;AAAA,MAC5C;AAAA,IACF;AAAA,IACA,cAAc,CAAC,cAAiB,SAAY,OAAO;AAAA,IACnD,QAAQ,CAAC,miBAAmiB;AAAA,EAC9iB,CAAC;AACH;AAAA,CACC,MAAM;AACL,GAAC,OAAO,cAAc,eAAe,cAAiB,iBAAkB,uBAAuB,CAAC;AAAA,IAC9F,MAAM;AAAA,IACN,MAAM,CAAC;AAAA,MACL,UAAU;AAAA,MACV,YAAY;AAAA,MACZ,SAAS,CAAC,YAAY;AAAA,MACtB,UAAU;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MACV,QAAQ,CAAC,+WAA+W;AAAA,IAC1X,CAAC;AAAA,EACH,CAAC,GAAG,MAAM,CAAC;AAAA,IACT,MAAM;AAAA,IACN,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,WAAW;AAAA,IACpB,CAAC;AAAA,EACH,CAAC,GAAG;AAAA,IACF,WAAW,CAAC;AAAA,MACV,MAAM;AAAA,MACN,MAAM,CAAC,mBAAmB;AAAA,IAC5B,CAAC;AAAA,IACD,QAAQ,CAAC;AAAA,MACP,MAAM;AAAA,MACN,MAAM,CAAC,gBAAgB;AAAA,IACzB,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,oBAAoB;AAAA,IAC7B,CAAC;AAAA,IACD,YAAY,CAAC;AAAA,MACX,MAAM;AAAA,MACN,MAAM,CAAC,YAAY;AAAA,IACrB,CAAC;AAAA,IACD,sBAAsB,CAAC;AAAA,MACrB,MAAM;AAAA,MACN,MAAM,CAAC,sBAAsB;AAAA,IAC/B,CAAC;AAAA,IACD,UAAU,CAAC;AAAA,MACT,MAAM;AAAA,MACN,MAAM,CAAC,UAAU;AAAA,IACnB,CAAC;AAAA,IACD,2BAA2B,CAAC;AAAA,MAC1B,MAAM;AAAA,MACN,MAAM,CAAC,uBAAuB;AAAA,IAChC,CAAC;AAAA,IACD,yBAAyB,CAAC;AAAA,MACxB,MAAM;AAAA,MACN,MAAM,CAAC,qBAAqB;AAAA,IAC9B,CAAC;AAAA,EACH,CAAC;AACH,GAAG;",
  "names": []
}
